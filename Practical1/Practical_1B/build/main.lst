ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** uint32_t start_time, end_time;
  49:Core/Src/main.c **** uint64_t checksum;
  50:Core/Src/main.c **** uint32_t execution_time;
  51:Core/Src/main.c **** int side_length[] = {128, 160, 192, 224, 256};
  52:Core/Src/main.c **** /*
  53:Core/Src/main.c ****   start_time
  54:Core/Src/main.c ****   end_time
  55:Core/Src/main.c ****   execution_time 
  56:Core/Src/main.c ****   checksum: should be uint64_t
  57:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  58:Core/Src/main.c **** */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  67:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void){
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 106:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 107:Core/Src/main.c ****   //TODO: Record the start time
 108:Core/Src/main.c ****   start_time=HAL_GetTick();
 109:Core/Src/main.c ****   
 110:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 111:Core/Src/main.c ****   checksum = calculate_mandelbrot_fixed_point_arithmetic(side_length[4],side_length[4],MAX_ITER);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   end_time=HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   execution_time= end_time-start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 123:Core/Src/main.c ****   HAL_Delay(1000);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Turn off the LEDs
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_ldivmod
 120              		.global	__aeabi_lmul
 121              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 122              		.align	1
 123              		.global	calculate_mandelbrot_fixed_point_arithmetic
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	calculate_mandelbrot_fixed_point_arithmetic:
 129              	.LVL3:
 130              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 131              		.loc 1 208 96 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 112
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 208 96 is_stmt 0 view .LVU27
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI2:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 7


 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 DE46     		mov	lr, fp
 145 0004 5746     		mov	r7, r10
 146 0006 4E46     		mov	r6, r9
 147 0008 4546     		mov	r5, r8
 148 000a E0B5     		push	{r5, r6, r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 36
 151              		.cfi_offset 8, -36
 152              		.cfi_offset 9, -32
 153              		.cfi_offset 10, -28
 154              		.cfi_offset 11, -24
 155 000c 9DB0     		sub	sp, sp, #116
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 152
 158 000e 1A90     		str	r0, [sp, #104]
 159 0010 1B91     		str	r1, [sp, #108]
 160 0012 9146     		mov	r9, r2
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 209 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 210:Core/Src/main.c ****   int scale = 16384;
 163              		.loc 1 210 3 view .LVU29
 211:Core/Src/main.c ****     //TODO: Complete the function implementation
 212:Core/Src/main.c ****     for (int y=0; y<height; y++) {
 164              		.loc 1 212 5 view .LVU30
 165              	.LBB6:
 166              		.loc 1 212 10 view .LVU31
 167              		.loc 1 212 14 is_stmt 0 view .LVU32
 168 0014 0023     		movs	r3, #0
 169 0016 9B46     		mov	fp, r3
 170              	.LBE6:
 209:Core/Src/main.c ****   int scale = 16384;
 171              		.loc 1 209 12 view .LVU33
 172 0018 0023     		movs	r3, #0
 173 001a 0024     		movs	r4, #0
 174 001c 1893     		str	r3, [sp, #96]
 175 001e 1994     		str	r4, [sp, #100]
 176              	.LBB12:
 177              		.loc 1 212 5 view .LVU34
 178 0020 D6E0     		b	.L5
 179              	.LVL5:
 180              	.L8:
 181              	.LBB7:
 182              	.LBB8:
 183              	.LBB9:
 213:Core/Src/main.c ****     	for (int x=0; x<width; x++) {
 214:Core/Src/main.c ****     		int64_t x0 = ((int64_t)x*scale*35)/(width*10)-(25*scale)/10;
 215:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****     		int64_t xi=0;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 8


 219:Core/Src/main.c ****     		int64_t yi=0;
 220:Core/Src/main.c ****     		int iteration =0;
 221:Core/Src/main.c ****     		while (iteration<max_iterations && (((xi*xi)/scale)+((yi*yi)/scale)<=4*scale)) { // Dividing 
 222:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 184              		.loc 1 222 8 is_stmt 1 view .LVU35
 185              		.loc 1 222 16 is_stmt 0 view .LVU36
 186 0022 A41A     		subs	r4, r4, r2
 187 0024 9D41     		sbcs	r5, r5, r3
 188              	.LVL6:
 223:Core/Src/main.c ****     			yi=((2*xi*yi)/scale)+y0;
 189              		.loc 1 223 8 is_stmt 1 view .LVU37
 190              		.loc 1 223 17 is_stmt 0 view .LVU38
 191 0026 029A     		ldr	r2, [sp, #8]
 192 0028 039B     		ldr	r3, [sp, #12]
 193 002a 0098     		ldr	r0, [sp]
 194 002c 0199     		ldr	r1, [sp, #4]
 195 002e FFF7FEFF 		bl	__aeabi_lmul
 196              	.LVL7:
 197 0032 0200     		movs	r2, r0
 198 0034 0B00     		movs	r3, r1
 199 0036 9218     		adds	r2, r2, r2
 200 0038 5B41     		adcs	r3, r3, r3
 201              		.loc 1 223 21 view .LVU39
 202 003a D917     		asrs	r1, r3, #31
 203 003c 8904     		lsls	r1, r1, #18
 204 003e 890C     		lsrs	r1, r1, #18
 205 0040 0891     		str	r1, [sp, #32]
 206 0042 0021     		movs	r1, #0
 207 0044 0991     		str	r1, [sp, #36]
 208 0046 0898     		ldr	r0, [sp, #32]
 209 0048 0999     		ldr	r1, [sp, #36]
 210 004a 1218     		adds	r2, r2, r0
 211 004c 4B41     		adcs	r3, r3, r1
 212 004e 9E04     		lsls	r6, r3, #18
 213 0050 0092     		str	r2, [sp]
 214 0052 0193     		str	r3, [sp, #4]
 215              	.LVL8:
 216              		.loc 1 223 21 view .LVU40
 217 0054 920B     		lsrs	r2, r2, #14
 218 0056 1643     		orrs	r6, r2
 219 0058 3000     		movs	r0, r6
 220 005a 019B     		ldr	r3, [sp, #4]
 221 005c 9913     		asrs	r1, r3, #14
 222              		.loc 1 223 10 view .LVU41
 223 005e 0E9A     		ldr	r2, [sp, #56]
 224 0060 0F9B     		ldr	r3, [sp, #60]
 225 0062 1218     		adds	r2, r2, r0
 226 0064 4B41     		adcs	r3, r3, r1
 227 0066 0292     		str	r2, [sp, #8]
 228 0068 0393     		str	r3, [sp, #12]
 229              	.LVL9:
 224:Core/Src/main.c ****     			xi=tmp+x0;
 230              		.loc 1 224 8 is_stmt 1 view .LVU42
 231              		.loc 1 224 10 is_stmt 0 view .LVU43
 232 006a 0C9E     		ldr	r6, [sp, #48]
 233 006c 0D9F     		ldr	r7, [sp, #52]
 234 006e 3619     		adds	r6, r6, r4
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 9


 235 0070 6F41     		adcs	r7, r7, r5
 236 0072 0096     		str	r6, [sp]
 237 0074 0197     		str	r7, [sp, #4]
 238              	.LVL10:
 225:Core/Src/main.c ****     			iteration++;
 239              		.loc 1 225 8 is_stmt 1 view .LVU44
 240              		.loc 1 225 17 is_stmt 0 view .LVU45
 241 0076 0123     		movs	r3, #1
 242 0078 9C46     		mov	ip, r3
 243 007a E044     		add	r8, r8, ip
 244              	.LVL11:
 245              	.L6:
 246              		.loc 1 225 17 view .LVU46
 247              	.LBE9:
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 248              		.loc 1 221 39 is_stmt 1 view .LVU47
 249 007c C845     		cmp	r8, r9
 250 007e 44DA     		bge	.L7
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 251              		.loc 1 221 47 is_stmt 0 discriminator 1 view .LVU48
 252 0080 009A     		ldr	r2, [sp]
 253 0082 019B     		ldr	r3, [sp, #4]
 254 0084 1000     		movs	r0, r2
 255 0086 1900     		movs	r1, r3
 256 0088 FFF7FEFF 		bl	__aeabi_lmul
 257              	.LVL12:
 258 008c 0200     		movs	r2, r0
 259 008e 0B00     		movs	r3, r1
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 260              		.loc 1 221 51 discriminator 1 view .LVU49
 261 0090 C917     		asrs	r1, r1, #31
 262 0092 8904     		lsls	r1, r1, #18
 263 0094 890C     		lsrs	r1, r1, #18
 264 0096 0491     		str	r1, [sp, #16]
 265 0098 0021     		movs	r1, #0
 266 009a 0E00     		movs	r6, r1
 267 009c 0591     		str	r1, [sp, #20]
 268 009e 0498     		ldr	r0, [sp, #16]
 269 00a0 0599     		ldr	r1, [sp, #20]
 270 00a2 1218     		adds	r2, r2, r0
 271 00a4 4B41     		adcs	r3, r3, r1
 272 00a6 1C00     		movs	r4, r3
 273 00a8 1300     		movs	r3, r2
 274 00aa A104     		lsls	r1, r4, #18
 275 00ac 0A93     		str	r3, [sp, #40]
 276 00ae 0B94     		str	r4, [sp, #44]
 277 00b0 920B     		lsrs	r2, r2, #14
 278 00b2 0B00     		movs	r3, r1
 279 00b4 1343     		orrs	r3, r2
 280 00b6 1C00     		movs	r4, r3
 281 00b8 0B9B     		ldr	r3, [sp, #44]
 282 00ba 9D13     		asrs	r5, r3, #14
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 283              		.loc 1 221 63 discriminator 1 view .LVU50
 284 00bc 0298     		ldr	r0, [sp, #8]
 285 00be 0399     		ldr	r1, [sp, #12]
 286 00c0 0200     		movs	r2, r0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 10


 287 00c2 0B00     		movs	r3, r1
 288 00c4 FFF7FEFF 		bl	__aeabi_lmul
 289              	.LVL13:
 290 00c8 0200     		movs	r2, r0
 291 00ca 0B00     		movs	r3, r1
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 292              		.loc 1 221 67 discriminator 1 view .LVU51
 293 00cc C917     		asrs	r1, r1, #31
 294 00ce 8904     		lsls	r1, r1, #18
 295 00d0 880C     		lsrs	r0, r1, #18
 296 00d2 0690     		str	r0, [sp, #24]
 297 00d4 0796     		str	r6, [sp, #28]
 298 00d6 0698     		ldr	r0, [sp, #24]
 299 00d8 0799     		ldr	r1, [sp, #28]
 300 00da 8018     		adds	r0, r0, r2
 301 00dc 5941     		adcs	r1, r1, r3
 302 00de 8B04     		lsls	r3, r1, #18
 303 00e0 9C46     		mov	ip, r3
 304 00e2 0F00     		movs	r7, r1
 305 00e4 800B     		lsrs	r0, r0, #14
 306 00e6 6146     		mov	r1, ip
 307 00e8 0143     		orrs	r1, r0
 308 00ea 0A00     		movs	r2, r1
 309 00ec BB13     		asrs	r3, r7, #14
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 310              		.loc 1 221 58 discriminator 1 view .LVU52
 311 00ee 2000     		movs	r0, r4
 312 00f0 2900     		movs	r1, r5
 313 00f2 8018     		adds	r0, r0, r2
 314 00f4 5941     		adcs	r1, r1, r3
 315 00f6 0A90     		str	r0, [sp, #40]
 316 00f8 0B91     		str	r1, [sp, #44]
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 317              		.loc 1 221 39 discriminator 1 view .LVU53
 318 00fa 0029     		cmp	r1, #0
 319 00fc 05DC     		bgt	.L7
 320 00fe 90D1     		bne	.L8
 321 0100 8021     		movs	r1, #128
 322 0102 4902     		lsls	r1, r1, #9
 323 0104 0A98     		ldr	r0, [sp, #40]
 324 0106 8842     		cmp	r0, r1
 325 0108 8BD9     		bls	.L8
 326              	.L7:
 226:Core/Src/main.c ****     		}
 227:Core/Src/main.c ****     		mandelbrot_sum+=iteration;
 327              		.loc 1 227 7 is_stmt 1 view .LVU54
 328              		.loc 1 227 21 is_stmt 0 view .LVU55
 329 010a 4346     		mov	r3, r8
 330 010c 1693     		str	r3, [sp, #88]
 331 010e DB17     		asrs	r3, r3, #31
 332 0110 1793     		str	r3, [sp, #92]
 333 0112 189B     		ldr	r3, [sp, #96]
 334 0114 199C     		ldr	r4, [sp, #100]
 335 0116 1699     		ldr	r1, [sp, #88]
 336 0118 179A     		ldr	r2, [sp, #92]
 337 011a 5B18     		adds	r3, r3, r1
 338 011c 5441     		adcs	r4, r4, r2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 11


 339 011e 1893     		str	r3, [sp, #96]
 340 0120 1994     		str	r4, [sp, #100]
 341              	.LVL14:
 342              		.loc 1 227 21 view .LVU56
 343              	.LBE8:
 213:Core/Src/main.c ****     		int64_t x0 = ((int64_t)x*scale*35)/(width*10)-(25*scale)/10;
 344              		.loc 1 213 30 is_stmt 1 discriminator 2 view .LVU57
 345 0122 0123     		movs	r3, #1
 346              	.LVL15:
 213:Core/Src/main.c ****     		int64_t x0 = ((int64_t)x*scale*35)/(width*10)-(25*scale)/10;
 347              		.loc 1 213 30 is_stmt 0 discriminator 2 view .LVU58
 348 0124 9C46     		mov	ip, r3
 349 0126 E244     		add	r10, r10, ip
 350              	.LVL16:
 351              	.L11:
 213:Core/Src/main.c ****     		int64_t x0 = ((int64_t)x*scale*35)/(width*10)-(25*scale)/10;
 352              		.loc 1 213 21 is_stmt 1 discriminator 1 view .LVU59
 353 0128 1A9B     		ldr	r3, [sp, #104]
 354 012a 9A45     		cmp	r10, r3
 355 012c 4DDA     		bge	.L13
 356              	.LBB10:
 214:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 357              		.loc 1 214 7 view .LVU60
 214:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 358              		.loc 1 214 21 is_stmt 0 view .LVU61
 359 012e 5346     		mov	r3, r10
 360 0130 1493     		str	r3, [sp, #80]
 361 0132 DB17     		asrs	r3, r3, #31
 362 0134 1593     		str	r3, [sp, #84]
 214:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 363              		.loc 1 214 37 view .LVU62
 364 0136 1498     		ldr	r0, [sp, #80]
 365 0138 1599     		ldr	r1, [sp, #84]
 366 013a 820F     		lsrs	r2, r0, #30
 367 013c 9B00     		lsls	r3, r3, #2
 368 013e 1193     		str	r3, [sp, #68]
 369 0140 1343     		orrs	r3, r2
 370 0142 1193     		str	r3, [sp, #68]
 371 0144 8300     		lsls	r3, r0, #2
 372 0146 1093     		str	r3, [sp, #64]
 373 0148 109A     		ldr	r2, [sp, #64]
 374 014a 119B     		ldr	r3, [sp, #68]
 375 014c 1218     		adds	r2, r2, r0
 376 014e 4B41     		adcs	r3, r3, r1
 377 0150 510F     		lsrs	r1, r2, #29
 378 0152 D800     		lsls	r0, r3, #3
 379 0154 1390     		str	r0, [sp, #76]
 380 0156 0843     		orrs	r0, r1
 381 0158 1390     		str	r0, [sp, #76]
 382 015a D100     		lsls	r1, r2, #3
 383 015c 1291     		str	r1, [sp, #72]
 384 015e 1298     		ldr	r0, [sp, #72]
 385 0160 1399     		ldr	r1, [sp, #76]
 386 0162 801A     		subs	r0, r0, r2
 387 0164 9941     		sbcs	r1, r1, r3
 388 0166 820C     		lsrs	r2, r0, #18
 389 0168 8B03     		lsls	r3, r1, #14
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 12


 390 016a 8403     		lsls	r4, r0, #14
 391 016c 2000     		movs	r0, r4
 392 016e 1A43     		orrs	r2, r3
 393 0170 1100     		movs	r1, r2
 214:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 394              		.loc 1 214 48 view .LVU63
 395 0172 1A9B     		ldr	r3, [sp, #104]
 396 0174 9A00     		lsls	r2, r3, #2
 397 0176 9C46     		mov	ip, r3
 398 0178 6244     		add	r2, r2, ip
 399 017a 5200     		lsls	r2, r2, #1
 400 017c D317     		asrs	r3, r2, #31
 214:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 401              		.loc 1 214 41 view .LVU64
 402 017e FFF7FEFF 		bl	__aeabi_ldivmod
 403              	.LVL17:
 214:Core/Src/main.c ****     		int64_t y0 = ((int64_t)y*scale*2)/(height)-scale;
 404              		.loc 1 214 15 view .LVU65
 405 0182 1B4A     		ldr	r2, .L15
 406 0184 0123     		movs	r3, #1
 407 0186 5B42     		rsbs	r3, r3, #0
 408 0188 8018     		adds	r0, r0, r2
 409 018a 5941     		adcs	r1, r1, r3
 410 018c 0C90     		str	r0, [sp, #48]
 411 018e 0D91     		str	r1, [sp, #52]
 412              	.LVL18:
 215:Core/Src/main.c **** 
 413              		.loc 1 215 7 is_stmt 1 view .LVU66
 215:Core/Src/main.c **** 
 414              		.loc 1 215 21 is_stmt 0 view .LVU67
 415 0190 5B46     		mov	r3, fp
 416 0192 D917     		asrs	r1, r3, #31
 215:Core/Src/main.c **** 
 417              		.loc 1 215 37 view .LVU68
 418 0194 5B0C     		lsrs	r3, r3, #17
 419 0196 C903     		lsls	r1, r1, #15
 420 0198 1943     		orrs	r1, r3
 421 019a 5B46     		mov	r3, fp
 422 019c D803     		lsls	r0, r3, #15
 423              	.LVL19:
 215:Core/Src/main.c **** 
 424              		.loc 1 215 40 view .LVU69
 425 019e 1B9A     		ldr	r2, [sp, #108]
 426 01a0 D317     		asrs	r3, r2, #31
 427 01a2 FFF7FEFF 		bl	__aeabi_ldivmod
 428              	.LVL20:
 215:Core/Src/main.c **** 
 429              		.loc 1 215 15 view .LVU70
 430 01a6 134A     		ldr	r2, .L15+4
 431 01a8 0123     		movs	r3, #1
 432 01aa 5B42     		rsbs	r3, r3, #0
 433 01ac 8018     		adds	r0, r0, r2
 434 01ae 5941     		adcs	r1, r1, r3
 435 01b0 0E90     		str	r0, [sp, #56]
 436 01b2 0F91     		str	r1, [sp, #60]
 437              	.LVL21:
 218:Core/Src/main.c ****     		int64_t yi=0;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 13


 438              		.loc 1 218 7 is_stmt 1 view .LVU71
 219:Core/Src/main.c ****     		int iteration =0;
 439              		.loc 1 219 7 view .LVU72
 220:Core/Src/main.c ****     		while (iteration<max_iterations && (((xi*xi)/scale)+((yi*yi)/scale)<=4*scale)) { // Dividing 
 440              		.loc 1 220 7 view .LVU73
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 441              		.loc 1 221 7 view .LVU74
 220:Core/Src/main.c ****     		while (iteration<max_iterations && (((xi*xi)/scale)+((yi*yi)/scale)<=4*scale)) { // Dividing 
 442              		.loc 1 220 11 is_stmt 0 view .LVU75
 443 01b4 0023     		movs	r3, #0
 444 01b6 9846     		mov	r8, r3
 219:Core/Src/main.c ****     		int iteration =0;
 445              		.loc 1 219 15 view .LVU76
 446 01b8 0023     		movs	r3, #0
 447 01ba 0024     		movs	r4, #0
 448 01bc 0293     		str	r3, [sp, #8]
 449 01be 0394     		str	r4, [sp, #12]
 218:Core/Src/main.c ****     		int64_t yi=0;
 450              		.loc 1 218 15 view .LVU77
 451 01c0 0026     		movs	r6, #0
 452 01c2 0027     		movs	r7, #0
 453 01c4 0096     		str	r6, [sp]
 454 01c6 0197     		str	r7, [sp, #4]
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 455              		.loc 1 221 13 view .LVU78
 456 01c8 58E7     		b	.L6
 457              	.LVL22:
 458              	.L13:
 221:Core/Src/main.c ****     			int64_t tmp = ((xi*xi)/scale)-((yi*yi)/scale); // ...also squaring the scale
 459              		.loc 1 221 13 view .LVU79
 460              	.LBE10:
 461              	.LBE7:
 212:Core/Src/main.c ****     	for (int x=0; x<width; x++) {
 462              		.loc 1 212 30 is_stmt 1 discriminator 2 view .LVU80
 463 01ca 0123     		movs	r3, #1
 464 01cc 9C46     		mov	ip, r3
 465 01ce E344     		add	fp, fp, ip
 466              	.LVL23:
 467              	.L5:
 212:Core/Src/main.c ****     	for (int x=0; x<width; x++) {
 468              		.loc 1 212 20 discriminator 1 view .LVU81
 469 01d0 1B9B     		ldr	r3, [sp, #108]
 470 01d2 9B45     		cmp	fp, r3
 471 01d4 02DA     		bge	.L14
 472              	.LBB11:
 213:Core/Src/main.c ****     		int64_t x0 = ((int64_t)x*scale*35)/(width*10)-(25*scale)/10;
 473              		.loc 1 213 15 is_stmt 0 view .LVU82
 474 01d6 0023     		movs	r3, #0
 475 01d8 9A46     		mov	r10, r3
 476 01da A5E7     		b	.L11
 477              	.L14:
 478              	.LBE11:
 479              	.LBE12:
 228:Core/Src/main.c ****     	}
 229:Core/Src/main.c ****     }
 230:Core/Src/main.c ****     return mandelbrot_sum;
 480              		.loc 1 230 5 is_stmt 1 view .LVU83
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 14


 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 481              		.loc 1 232 1 is_stmt 0 view .LVU84
 482 01dc 1898     		ldr	r0, [sp, #96]
 483 01de 1999     		ldr	r1, [sp, #100]
 484 01e0 1DB0     		add	sp, sp, #116
 485              		@ sp needed
 486              	.LVL24:
 487              	.LVL25:
 488              		.loc 1 232 1 view .LVU85
 489 01e2 F0BC     		pop	{r4, r5, r6, r7}
 490 01e4 BB46     		mov	fp, r7
 491 01e6 B246     		mov	r10, r6
 492 01e8 A946     		mov	r9, r5
 493 01ea A046     		mov	r8, r4
 494 01ec F0BD     		pop	{r4, r5, r6, r7, pc}
 495              	.L16:
 496 01ee C046     		.align	2
 497              	.L15:
 498 01f0 0060FFFF 		.word	-40960
 499 01f4 00C0FFFF 		.word	-16384
 500              		.cfi_endproc
 501              	.LFE43:
 503              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 504              		.align	1
 505              		.global	calculate_mandelbrot_double
 506              		.syntax unified
 507              		.code	16
 508              		.thumb_func
 510              	calculate_mandelbrot_double:
 511              	.LVL26:
 512              	.LFB44:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 235:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 513              		.loc 1 235 80 is_stmt 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 236:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 518              		.loc 1 236 5 view .LVU87
 237:Core/Src/main.c ****     //TODO: Complete the function implementation
 238:Core/Src/main.c ****     
 239:Core/Src/main.c ****     return mandelbrot_sum;
 519              		.loc 1 239 5 view .LVU88
 240:Core/Src/main.c **** }
 520              		.loc 1 240 1 is_stmt 0 view .LVU89
 521 0000 0020     		movs	r0, #0
 522              	.LVL27:
 523              		.loc 1 240 1 view .LVU90
 524 0002 0021     		movs	r1, #0
 525              	.LVL28:
 526              		.loc 1 240 1 view .LVU91
 527              		@ sp needed
 528 0004 7047     		bx	lr
 529              		.cfi_endproc
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 15


 530              	.LFE44:
 532              		.section	.text.Error_Handler,"ax",%progbits
 533              		.align	1
 534              		.global	Error_Handler
 535              		.syntax unified
 536              		.code	16
 537              		.thumb_func
 539              	Error_Handler:
 540              	.LFB45:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /* USER CODE END 4 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** void Error_Handler(void)
 249:Core/Src/main.c **** {
 541              		.loc 1 249 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ Volatile: function does not return.
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 250:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 251:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 252:Core/Src/main.c ****   __disable_irq();
 547              		.loc 1 252 3 view .LVU93
 548              	.LBB13:
 549              	.LBI13:
 550              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 16


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 17


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 18


 551              		.loc 2 140 27 view .LVU94
 552              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 553              		.loc 2 142 3 view .LVU95
 554              		.syntax divided
 555              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 556 0000 72B6     		cpsid i
 557              	@ 0 "" 2
 558              		.thumb
 559              		.syntax unified
 560              	.L19:
 561              	.LBE14:
 562              	.LBE13:
 253:Core/Src/main.c ****   while (1)
 563              		.loc 1 253 3 view .LVU96
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****   }
 564              		.loc 1 255 3 view .LVU97
 253:Core/Src/main.c ****   while (1)
 565              		.loc 1 253 9 view .LVU98
 566 0002 FEE7     		b	.L19
 567              		.cfi_endproc
 568              	.LFE45:
 570              		.section	.text.SystemClock_Config,"ax",%progbits
 571              		.align	1
 572              		.global	SystemClock_Config
 573              		.syntax unified
 574              		.code	16
 575              		.thumb_func
 577              	SystemClock_Config:
 578              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 579              		.loc 1 147 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 64
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0000 00B5     		push	{lr}
 584              	.LCFI5:
 585              		.cfi_def_cfa_offset 4
 586              		.cfi_offset 14, -4
 587 0002 91B0     		sub	sp, sp, #68
 588              	.LCFI6:
 589              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 590              		.loc 1 148 3 view .LVU100
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 591              		.loc 1 148 22 is_stmt 0 view .LVU101
 592 0004 3022     		movs	r2, #48
 593 0006 0021     		movs	r1, #0
 594 0008 04A8     		add	r0, sp, #16
 595 000a FFF7FEFF 		bl	memset
 596              	.LVL29:
 149:Core/Src/main.c **** 
 597              		.loc 1 149 3 is_stmt 1 view .LVU102
 149:Core/Src/main.c **** 
 598              		.loc 1 149 22 is_stmt 0 view .LVU103
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 19


 599 000e 1022     		movs	r2, #16
 600 0010 0021     		movs	r1, #0
 601 0012 6846     		mov	r0, sp
 602 0014 FFF7FEFF 		bl	memset
 603              	.LVL30:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 604              		.loc 1 154 3 is_stmt 1 view .LVU104
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 605              		.loc 1 154 36 is_stmt 0 view .LVU105
 606 0018 0223     		movs	r3, #2
 607 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 608              		.loc 1 155 3 is_stmt 1 view .LVU106
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 609              		.loc 1 155 30 is_stmt 0 view .LVU107
 610 001c 013B     		subs	r3, r3, #1
 611 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 612              		.loc 1 156 3 is_stmt 1 view .LVU108
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 613              		.loc 1 156 41 is_stmt 0 view .LVU109
 614 0020 0F33     		adds	r3, r3, #15
 615 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 616              		.loc 1 157 3 is_stmt 1 view .LVU110
 158:Core/Src/main.c ****   {
 617              		.loc 1 158 3 view .LVU111
 158:Core/Src/main.c ****   {
 618              		.loc 1 158 7 is_stmt 0 view .LVU112
 619 0024 04A8     		add	r0, sp, #16
 620 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 621              	.LVL31:
 158:Core/Src/main.c ****   {
 622              		.loc 1 158 6 discriminator 1 view .LVU113
 623 002a 0028     		cmp	r0, #0
 624 002c 0DD1     		bne	.L23
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 625              		.loc 1 165 3 is_stmt 1 view .LVU114
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 626              		.loc 1 165 31 is_stmt 0 view .LVU115
 627 002e 0723     		movs	r3, #7
 628 0030 0093     		str	r3, [sp]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 629              		.loc 1 167 3 is_stmt 1 view .LVU116
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 630              		.loc 1 167 34 is_stmt 0 view .LVU117
 631 0032 0023     		movs	r3, #0
 632 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 633              		.loc 1 168 3 is_stmt 1 view .LVU118
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 634              		.loc 1 168 35 is_stmt 0 view .LVU119
 635 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 636              		.loc 1 169 3 is_stmt 1 view .LVU120
 169:Core/Src/main.c **** 
 637              		.loc 1 169 36 is_stmt 0 view .LVU121
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 20


 638 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 639              		.loc 1 171 3 is_stmt 1 view .LVU122
 171:Core/Src/main.c ****   {
 640              		.loc 1 171 7 is_stmt 0 view .LVU123
 641 003a 0021     		movs	r1, #0
 642 003c 6846     		mov	r0, sp
 643 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 644              	.LVL32:
 171:Core/Src/main.c ****   {
 645              		.loc 1 171 6 discriminator 1 view .LVU124
 646 0042 0028     		cmp	r0, #0
 647 0044 03D1     		bne	.L24
 175:Core/Src/main.c **** 
 648              		.loc 1 175 1 view .LVU125
 649 0046 11B0     		add	sp, sp, #68
 650              		@ sp needed
 651 0048 00BD     		pop	{pc}
 652              	.L23:
 160:Core/Src/main.c ****   }
 653              		.loc 1 160 5 is_stmt 1 view .LVU126
 654 004a FFF7FEFF 		bl	Error_Handler
 655              	.LVL33:
 656              	.L24:
 173:Core/Src/main.c ****   }
 657              		.loc 1 173 5 view .LVU127
 658 004e FFF7FEFF 		bl	Error_Handler
 659              	.LVL34:
 660              		.cfi_endproc
 661              	.LFE41:
 663              		.section	.text.main,"ax",%progbits
 664              		.align	1
 665              		.global	main
 666              		.syntax unified
 667              		.code	16
 668              		.thumb_func
 670              	main:
 671              	.LFB40:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 672              		.loc 1 81 15 view -0
 673              		.cfi_startproc
 674              		@ Volatile: function does not return.
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677 0000 70B5     		push	{r4, r5, r6, lr}
 678              	.LCFI7:
 679              		.cfi_def_cfa_offset 16
 680              		.cfi_offset 4, -16
 681              		.cfi_offset 5, -12
 682              		.cfi_offset 6, -8
 683              		.cfi_offset 14, -4
  89:Core/Src/main.c **** 
 684              		.loc 1 89 3 view .LVU129
 685 0002 FFF7FEFF 		bl	HAL_Init
 686              	.LVL35:
  96:Core/Src/main.c **** 
 687              		.loc 1 96 3 view .LVU130
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 21


 688 0006 FFF7FEFF 		bl	SystemClock_Config
 689              	.LVL36:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 690              		.loc 1 103 3 view .LVU131
 691 000a FFF7FEFF 		bl	MX_GPIO_Init
 692              	.LVL37:
 106:Core/Src/main.c ****   //TODO: Record the start time
 693              		.loc 1 106 3 view .LVU132
 694 000e 174C     		ldr	r4, .L27
 695 0010 0122     		movs	r2, #1
 696 0012 0121     		movs	r1, #1
 697 0014 2000     		movs	r0, r4
 698 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 699              	.LVL38:
 108:Core/Src/main.c ****   
 700              		.loc 1 108 3 view .LVU133
 108:Core/Src/main.c ****   
 701              		.loc 1 108 14 is_stmt 0 view .LVU134
 702 001a FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL39:
 108:Core/Src/main.c ****   
 704              		.loc 1 108 13 discriminator 1 view .LVU135
 705 001e 144D     		ldr	r5, .L27+4
 706 0020 2860     		str	r0, [r5]
 111:Core/Src/main.c **** 
 707              		.loc 1 111 3 is_stmt 1 view .LVU136
 111:Core/Src/main.c **** 
 708              		.loc 1 111 14 is_stmt 0 view .LVU137
 709 0022 144B     		ldr	r3, .L27+8
 710 0024 1869     		ldr	r0, [r3, #16]
 711 0026 6422     		movs	r2, #100
 712 0028 0100     		movs	r1, r0
 713 002a FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 714              	.LVL40:
 111:Core/Src/main.c **** 
 715              		.loc 1 111 12 discriminator 1 view .LVU138
 716 002e 124B     		ldr	r3, .L27+12
 717 0030 1860     		str	r0, [r3]
 718 0032 5960     		str	r1, [r3, #4]
 114:Core/Src/main.c **** 
 719              		.loc 1 114 3 is_stmt 1 view .LVU139
 114:Core/Src/main.c **** 
 720              		.loc 1 114 12 is_stmt 0 view .LVU140
 721 0034 FFF7FEFF 		bl	HAL_GetTick
 722              	.LVL41:
 114:Core/Src/main.c **** 
 723              		.loc 1 114 11 discriminator 1 view .LVU141
 724 0038 104B     		ldr	r3, .L27+16
 725 003a 1860     		str	r0, [r3]
 117:Core/Src/main.c **** 
 726              		.loc 1 117 3 is_stmt 1 view .LVU142
 117:Core/Src/main.c **** 
 727              		.loc 1 117 27 is_stmt 0 view .LVU143
 728 003c 2B68     		ldr	r3, [r5]
 729 003e C01A     		subs	r0, r0, r3
 117:Core/Src/main.c **** 
 730              		.loc 1 117 17 view .LVU144
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 22


 731 0040 0F4B     		ldr	r3, .L27+20
 732 0042 1860     		str	r0, [r3]
 120:Core/Src/main.c **** 
 733              		.loc 1 120 3 is_stmt 1 view .LVU145
 734 0044 0122     		movs	r2, #1
 735 0046 0221     		movs	r1, #2
 736 0048 2000     		movs	r0, r4
 737 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 738              	.LVL42:
 123:Core/Src/main.c **** 
 739              		.loc 1 123 3 view .LVU146
 740 004e FA20     		movs	r0, #250
 741 0050 8000     		lsls	r0, r0, #2
 742 0052 FFF7FEFF 		bl	HAL_Delay
 743              	.LVL43:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 744              		.loc 1 126 3 view .LVU147
 745 0056 0022     		movs	r2, #0
 746 0058 0121     		movs	r1, #1
 747 005a 2000     		movs	r0, r4
 748 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 749              	.LVL44:
 127:Core/Src/main.c **** 
 750              		.loc 1 127 3 view .LVU148
 751 0060 0022     		movs	r2, #0
 752 0062 0221     		movs	r1, #2
 753 0064 2000     		movs	r0, r4
 754 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 755              	.LVL45:
 756              	.L26:
 133:Core/Src/main.c ****   {
 757              		.loc 1 133 3 view .LVU149
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 758              		.loc 1 138 3 view .LVU150
 133:Core/Src/main.c ****   {
 759              		.loc 1 133 9 view .LVU151
 760 006a FEE7     		b	.L26
 761              	.L28:
 762              		.align	2
 763              	.L27:
 764 006c 00040048 		.word	1207960576
 765 0070 00000000 		.word	start_time
 766 0074 00000000 		.word	side_length
 767 0078 00000000 		.word	checksum
 768 007c 00000000 		.word	end_time
 769 0080 00000000 		.word	execution_time
 770              		.cfi_endproc
 771              	.LFE40:
 773              		.global	side_length
 774              		.section	.data.side_length,"aw"
 775              		.align	2
 778              	side_length:
 779 0000 80000000 		.word	128
 780 0004 A0000000 		.word	160
 781 0008 C0000000 		.word	192
 782 000c E0000000 		.word	224
 783 0010 00010000 		.word	256
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 23


 784              		.global	execution_time
 785              		.section	.bss.execution_time,"aw",%nobits
 786              		.align	2
 789              	execution_time:
 790 0000 00000000 		.space	4
 791              		.global	checksum
 792              		.section	.bss.checksum,"aw",%nobits
 793              		.align	3
 796              	checksum:
 797 0000 00000000 		.space	8
 797      00000000 
 798              		.global	end_time
 799              		.section	.bss.end_time,"aw",%nobits
 800              		.align	2
 803              	end_time:
 804 0000 00000000 		.space	4
 805              		.global	start_time
 806              		.section	.bss.start_time,"aw",%nobits
 807              		.align	2
 810              	start_time:
 811 0000 00000000 		.space	4
 812              		.text
 813              	.Letext0:
 814              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 815              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 816              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 817              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 818              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 819              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 820              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 821              		.file 10 "<built-in>"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccujHbua.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:122    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:498    .text.calculate_mandelbrot_fixed_point_arithmetic:000001f0 $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:504    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:510    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:533    .text.Error_Handler:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:539    .text.Error_Handler:00000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:571    .text.SystemClock_Config:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:577    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:664    .text.main:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:670    .text.main:00000000 main
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:764    .text.main:0000006c $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:810    .bss.start_time:00000000 start_time
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:778    .data.side_length:00000000 side_length
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:796    .bss.checksum:00000000 checksum
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:803    .bss.end_time:00000000 end_time
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:789    .bss.execution_time:00000000 execution_time
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:775    .data.side_length:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:786    .bss.execution_time:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:793    .bss.checksum:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:800    .bss.end_time:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccujHbua.s:807    .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_lmul
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
